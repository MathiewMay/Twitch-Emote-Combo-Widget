require("source-map-support").install(),module.exports=function(r){var n={};function o(e){if(n[e])return n[e].exports;var t=n[e]={i:e,l:!1,exports:{}};return r[e].call(t.exports,t,t.exports,o),t.l=!0,t.exports}return o.m=r,o.c=n,o.d=function(e,t,r){o.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},o.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},o.t=function(t,e){if(1&e&&(t=o(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(o.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var n in t)o.d(r,n,function(e){return t[e]}.bind(null,n));return r},o.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return o.d(t,"a",t),t},o.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},o.p="dist/",o(o.s=0)}([function(e,t,r){"use strict";var n=r(1),o=n(r(2)),u=n(r(3)),i=n(r(4)),l={getEmojiObjectByCode:function(t){if(t=t.replace(/:/g,""),i.default.lib[t]&&"object"===(0,o.default)(i.default.lib[t])&&i.default.lib[t].char)return i.default.lib[t];var e=Object.keys(i.default.lib).find(function(e){return i.default.lib[e].keywords.includes(t)});return e?i.default.lib[e]:void 0},parse:function(n){var o=this;if("string"!=typeof n)throw new Error("The text parameter should be a string.");var e=n.match(/:(\w+):/g);return e&&e.forEach(function(e){var t,r=o.getEmojiObjectByCode(e);r&&(t=new RegExp(e),n=n.replace(t,r.char))}),u.default.parse(n)}};e.exports=l},function(e,t){e.exports=require("@babel/runtime/helpers/interopRequireDefault")},function(e,t){e.exports=require("@babel/runtime/helpers/typeof")},function(e,t){e.exports=require("twemoji")},function(e,t){e.exports=require("emojilib")}]);
//# sourceMappingURL=main.js.map